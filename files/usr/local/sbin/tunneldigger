#!/bin/bash

if [ ! -e /usr/bin/jshon ]; then
	echo "jshon fehlt! Installiere mit apt-get install jshon"
	exit
fi

# tunneldigger hoods im json-Format
tdhoods="/etc/tunneldigger/hoods"
tdgeo="/etc/tunneldigger/geo"

jshon.tgg() {
	jshon -F ${tdhoods} $@
}
jshon.geo() {
	jshon -F ${tdgeo} $@
}
connect_to_hood() {
	uuid=$HOSTNAME
	IP="$1"
	port="$2"
	hook="/etc/tunneldigger/tunneldigger.hook"
	# first killall tunneldigger
	batctl if del l2tp1 2>/dev/null
	killall l2tp_client 2>/dev/null
	l2tp_client  -u "$uuid" -b "$IP:$port" -i l2tp1 -s "$hook" & 
	echo 
	echo -n "dauert einen Moment ."
	while true ; do
			sleep 1 
			echo -n .
			ip a s dev bat0 &>/dev/null && break
	done
	echo 
	echo "bat0 ist up!"
}

case "$1" in 
	s*)
		case $2 in
			h*) 	for hood in $(jshon.tgg -k) ; do
					echo $hood
					echo -n "GW IP: "
					jshon.tgg -e $hood -e ip -u
					echo "---"
				done
				;;
			t*) ip l2tp show tunnel 2>/dev/null;;
			*)	echo "usage: tunneldigger show [hoods|tunnel]";;
		esac;;
	c*)
		ip a | grep "inet6 fdff" && echo "Du bist schon im fff-Netz, dann geht's net" && exit
		
		if [ -z "$2" ]; then
			echo "usage: tunneldigger connect <hood>" 
			exit
		fi

		uuid=$HOSTNAME
		hood=$2
		IP="$(jshon.tgg -e "$hood" -e ip -u)" || ( echo "Abbruch: $hood nicht konfiguriert"; exit 1 )
		port="$(jshon.tgg -e "$hood" -e port -u)"
		
		connect_to_hood "$IP" "$port"
		;;

	g*)
		ip a | grep "inet6 fdff" && echo "Du bist schon im fff-Netz, dann geht's net" && exit
		
		if [ -z "$2" ]; then
			echo "usage: tunneldigger geoconnect <hood> [<server_no>]" 
			exit
		fi

		uuid=$HOSTNAME
		hood="$2"
		cnt="$3"
		
		lat="$(jshon.geo -e "$hood" -e lat -u)" || ( echo "Abbruch: $hood nicht bekannt"; exit 1 )
		lon="$(jshon.geo -e "$hood" -e lon -u)"
		
		wget -T15 "http://keyserver.freifunk-franken.de/fff/geo.php?name=pctunneldigger&key=000000000000&lat=$lat&long=$lon" -O /tmp/fastd_fff_output &> /dev/null
		
		counter=0
		while read -r line ; do
			counter=$((counter + 1))
			if [ -n "$cnt" ] && ! [ "$counter" -eq "$cnt" ] ; then
				continue
			fi
			IP="$(echo "$line" | grep -oP 'remote ipv4 "\K[0-9.]+(?=")')"
			svport=$(echo "$line" | grep -oP 'remote ipv4 "[0-9.]+" port \K[0-9]+')
			if [ "l2tp" = "$(wget -T10 "$IP/vpn.txt" -O - 2>/dev/null)" ]; then
				port=$((svport + 10000))
				break
			fi
		done <<< "$(grep 'remote ipv4' /tmp/fastd_fff_output)"
		echo "Gateway IP: $IP"
		echo "L2TP Port: $port"
		
		if [ ! -n "$port" ] ; then
			echo "No L2TP server found!"
			exit 1
		fi
		
		connect_to_hood "$IP" "$port"
		;;

	d*)
		# killall tunneldigger
		batctl if del l2tp1 2>/dev/null
		killall l2tp_client 2>/dev/null ;;

    e*)
        # edit /etc/tunneldigger/hoods

        PS3="Your choice: "
        select action in "show hoods" "add hood" "del hood" "edit hood"; do
            case $action in
                "show hoods")
                    jshon.tgg -k ;;
                "del hood")
                    select hood in $(jshon.tgg -k) ; do
                        jshon -d $hood < $tdhoods > /tmp/hoods.tmp
                        mv /tmp/hoods.tmp $tdhoods
                        echo "hood $hood gelöscht!"
                        exit
                    done
                ;;
                "edit hood")
                    select hood in $(jshon.tgg -k) ; do 
                        jshon.tgg -e $hood
                        echo -n "Port: "; read port
                        echo -n "IP:   "; read ip
                        jshon -e $hood -s $port -i port -s $ip -i ip -i $hood < $tdhoods > /tmp/hoods.tmp                        
                        mv /tmp/hoods.tmp $tdhoods
                        echo "hood $hood geändert ->"
                        jshon.tgg -e $hood 
                        exit
                    done
                ;;
                "add hood")
                    echo "neue hood"
                    echo -n "hood:  "; read hood
                    echo -n "port:  "; read port
                    echo -n "ip  :  "; read ip
                    if [[ $ip =~ ^[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
                        for i in 1 2 3 4; do
                            if [ $(echo "$ip" | cut -d. -f$i) -gt 255 ]; then
                                echo "$ip - falsches format!"
                                exit 1
                            fi
                        done
                        key=$(jshon.tgg -k | tail -1)
                        jshon -e $key -i $hood < $tdhoods > /tmp/hoods.tmp
                        jshon -e $hood -s $port -i port -s $ip -i ip -i $hood </tmp/hoods.tmp > $tdhoods
                        echo "hood $hood hinzugefügt ->"
                        jshon.tgg -e $hood
                        exit
                    else
                        echo "$ip - falsches format!"
                        exit 1
                    fi

            esac
        
        done 
        ;;
	*)
		echo "usage: tunneldigger [show|connect|geoconnect|disconnect|edit]"
		echo "Neue Hoods werden mit edit in /etc/tunneldigger/hoods bzw."
		echo "manuell in /etc/tunneldigger/geo eingetragen (json Format)";;
esac	


# vi: set ts=4
